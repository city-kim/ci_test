name: job

on:
  pull_request:
    branches: [ main ]

jobs:
  # unit test를 실행한다
  unit_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: pnpm/action-setup@v2
      with:
        version: 8
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'pnpm'
    - run: pnpm install
    - run: pnpm test:unit
    - name: Add comment to PR
      uses: actions/github-script@v6
      if: always()
      with:
        github-token: ${{ secrets.TOKEN }}
        script: |
          const name = '${{ github.workflow   }}';
          const url = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
          const success = '${{ job.status }}' === 'success';
          const body = `${name}: ${success ? '✅ 유닛테스트 통과' : '❌ 유닛테스트 실패'}\n${url}`;

          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          })
  # e2e 테스트를 실행한다
  e2e_test:
    needs: unit_test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: pnpm/action-setup@v2
      with:
        version: 8
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'pnpm'
    - name: Install dependencies
      working-directory: ./app
      run: pnpm install

    - name: Cypress run
      uses: cypress-io/github-action@v5
      with:
        working-directory: ./app
        build: pnpm build
        start: pnpm preview
        wait-on: 'http://localhost:5173'
    - name: Add comment to PR
      uses: actions/github-script@v6
      if: always()
      with:
        github-token: ${{ secrets.TOKEN }}
        script: |
          const name = '${{ github.workflow   }}';
          const url = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
          const success = '${{ job.status }}' === 'success';
          const body = `${name}: ${success ? '✅ e2e TEST 통과' : '❌ e2e TEST 실패'}\n${url}`;

          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          })
  # github pages에 배포한다
  deploy:
    needs: [unit_test, e2e_test]
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'pnpm'
      - run: pnpm install
      - run: pnpm build
      - uses: actions/configure-pages@v3
      - uses: actions/upload-pages-artifact@v1
        with:
          path: './dist'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1